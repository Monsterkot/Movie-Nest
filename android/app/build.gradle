plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.monsterkot.movienest"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion
    
    signingConfigs {
        release {
            storeFile file(keystoreProperties.getProperty("KEYSTORE_PATH").replace("\\", "/"))
            storePassword keystoreProperties.getProperty("KEYSTORE_PASSWORD")
            keyAlias keystoreProperties.getProperty("KEY_ALIAS")
            keyPassword keystoreProperties.getProperty("KEY_PASSWORD")
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8' 
    }

    defaultConfig {
        applicationId = "com.monsterkot.movienest"
        minSdk = 19
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled = true
        
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
        }
        debug {
            signingConfig = signingConfigs.debug
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation 'com.google.api-client:google-api-client-android:1.33.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
    implementation 'joda-time:joda-time:2.10.10'
}

configurations {
    all {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

flutter {
    source = "../.."
}
